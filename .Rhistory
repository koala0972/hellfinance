x = "", y = "Adjusted Prices", color = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = scales::dollar) +
theme_tq() +
scale_color_tq()
FANG_monthly <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = to.period,
period     = "months")
FANG_monthly %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size = 1) +
labs(title = "Monthly Stock Prices",
x = "", y = "Adjusted Prices", color = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = scales::dollar) +
theme_tq() +
scale_color_tq()
# Asset Returns
FANG_returns_monthly <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly")
# Baseline Returns
baseline_returns_monthly <- "XLK" %>%
tq_get(get  = "stock.prices",
from = "2013-01-01",
to   = "2016-12-31") %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly")
returns_joined <- left_join(FANG_returns_monthly,
baseline_returns_monthly,
by = "date")
FANG_macd <- FANG %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "FANG: Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
library(tidyverse)
library(tidyquant)
library(lubridate)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 200)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
View(HU)
names = gsub("^....(.*$)", "\\1", names(HU))#點數等於字數
View(HU)
names(HU) <- tolower(names)
View(HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
View(HU)
o
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 200)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
View(HU)
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
FANG_macd <- HU %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
HU <- getSymbols("2614.tw", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 200)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
FANG_macd <- HU %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
library(tidyverse)
library(tidyquant)
library(lubridate)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 200)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
View(HU)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(Cairo)
library(showtext)
showtext_auto(enable=T)
#data("FANG")
########################FANG化##########################
HU <- getSymbols("2002.tw", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 50)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "中鋼", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
########################################################
CG <- getSymbols("2009.tw", auto.assign = FALSE, from = "2017-01-01")
CG <- CG[(rowSums(is.na(CG)) == 0), ]
CG <- tail(CG, n = 50)
CG <- round(CG, digits = 2)
CG <- as.data.frame(CG)
CG <- cbind(date = rownames(CG), CG)
names = gsub("^........(.*$)", "\\1", names(CG))#點數等於字數
names(CG) <- tolower(names)
rownames(CG) <- 1:nrow(CG)
CG <- cbind(symbol = "第一銅", CG)
CG$date <- as.Date(CG$date, format =  "%Y-%m-%d")
CG <- as.tibble(CG)
UD <- getSymbols("2618.tw", auto.assign = FALSE, from = "2017-01-01")
UD <- UD[(rowSums(is.na(UD)) == 0), ]
UD <- tail(UD, n = 50)
UD <- round(UD, digits = 2)
UD <- as.data.frame(UD)
UD <- cbind(date = rownames(UD), UD)
names = gsub("^........(.*$)", "\\1", names(UD))#點數等於字數
names(UD) <- tolower(names)
rownames(UD) <- 1:nrow(UD)
UD <- cbind(symbol = "長榮航", UD)
UD$date <- as.Date(UD$date, format =  "%Y-%m-%d")
UD <- as.tibble(UD)
CC <- getSymbols("2601.tw", auto.assign = FALSE, from = "2017-01-01")
CC <- CC[(rowSums(is.na(CC)) == 0), ]
CC <- tail(CC, n = 50)
CC <- round(CC, digits = 2)
CC <- as.data.frame(CC)
CC <- cbind(date = rownames(CC), CC)
names = gsub("^........(.*$)", "\\1", names(CC))#點數等於字數
names(CC) <- tolower(names)
rownames(CC) <- 1:nrow(CC)
CC <- cbind(symbol = "華航", CC)
CC$date <- as.Date(CC$date, format =  "%Y-%m-%d")
CC <- as.tibble(CC)
GG <- getSymbols("2603.tw", auto.assign = FALSE, from = "2017-01-01")
GG <- GG[(rowSums(is.na(GG)) == 0), ]
GG <- tail(GG, n = 50)
GG <- round(GG, digits = 2)
GG <- as.data.frame(GG)
GG <- cbind(date = rownames(GG), GG)
names = gsub("^........(.*$)", "\\1", names(GG))#點數等於字數
names(GG) <- tolower(names)
rownames(GG) <- 1:nrow(GG)
GG <- cbind(symbol = "長榮", GG)
GG$date <- as.Date(GG$date, format =  "%Y-%m-%d")
GG <- as.tibble(GG)
YY <- getSymbols("2609.tw", auto.assign = FALSE, from = "2017-01-01")
YY <- YY[(rowSums(is.na(YY)) == 0), ]
YY <- tail(YY, n = 50)
YY <- round(YY, digits = 2)
YY <- as.data.frame(YY)
YY <- cbind(date = rownames(YY), YY)
names = gsub("^........(.*$)", "\\1", names(YY))#點數等於字數
names(YY) <- tolower(names)
rownames(YY) <- 1:nrow(YY)
YY <- cbind(symbol = "陽明", YY)
YY$date <- as.Date(YY$date, format =  "%Y-%m-%d")
YY <- as.tibble(YY)
FANG <- rbind(CC, CG, HU, UD, GG, YY)
FANG_annual_returns <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "yearly",
type       = "arithmetic")
FANG_annual_returns#年收益
FANG_annual_returns %>%
ggplot(aes(x = date, y = yearly.returns, fill = symbol)) +
geom_col() +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
scale_y_continuous(labels = scales::percent) +
labs(title = "FANG: Annual Returns",
subtitle = "Get annual returns quickly with tq_transmute!",
y = "Annual Returns", x = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
theme_tq() +
scale_fill_tq()#年收益圖表
FANG_daily_log_returns <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "daily",
type       = "log",
col_rename = "monthly.returns")
FANG_daily_log_returns %>%
ggplot(aes(x = monthly.returns, fill = symbol)) +
geom_density(alpha = 0.5) +
labs(title = "FANG: Charting the Daily Log Returns",
x = "Monthly Returns", y = "Density") +
theme_tq() +
scale_fill_tq() +
facet_wrap(~ symbol, ncol = 2)
FANG %>%
group_by(symbol) %>%
tq_transmute(select     = open:volume,
mutate_fun = to.period,
period     = "months")
FANG_daily <- FANG %>%
group_by(symbol)
FANG_daily %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size = 1) +
labs(title = "Daily Stock Prices",
x = "", y = "Adjusted Prices", color = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = scales::dollar) +
theme_tq() +
scale_color_tq()
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 50)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
FANG_macd <- HU %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
library(tidyverse)
library(tidyquant)
library(lubridate)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 100)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
FANG_macd <- HU %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
#install.packages("rvest")
library(rvest)
html <- read_html("https://www.taifex.com.tw/cht/3/futContractsDate")
html <- read_html("https://www.taifex.com.tw/cht/3/totalTableDate")
html <- read_html("https://www.taifex.com.tw/cht/3/totalTableDateExcel")
html <- fromJSON("https://www.taifex.com.tw/cht/3/totalTableDateExcel")
#install.packages("rvest")
library(rvest)
library(jsonlite)
library(magrittr)
html <- fromJSON("https://www.taifex.com.tw/cht/3/totalTableDateExcel")
html <- read_xml("https://www.taifex.com.tw/cht/3/totalTableDateExcel")
library(xml2)
html <- read_xml("https://www.taifex.com.tw/cht/3/totalTableDateExcel")
html <- read_html("https://www.taifex.com.tw/cht/3/totalTableDateExcel")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
doc <- htmlParse(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
doc <- read_html(url, encoding = "UTF-8")
library(rvest) # 爬蟲相關套件
library(httr) # 爬蟲相關套件
library(dplyr) # 非常強大的資料處理套件
library(lubridate) # 處理日期變數的套件
library(stringr) # 處理字串的套件
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
doc <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
View(doc)
View(doc)
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
getOption('timeout')
options(timeout=100)
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
doc <- read_html(url, encoding = "UTF-8")
View(doc)
html <- read_html(url, encoding = "UTF-8")
html <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
cast <- html_nodes(html, "b")
View(cast)
cast <- html_nodes(html, "div")
View(cast)
cast <- html_nodes(html, "div , b")
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
cast <- html_nodes(html, "div , b")
View(cast)
cast <- html_nodes(html, b.selectorgadget_suggested)
cast <- html_nodes(html, "b.selectorgadget_suggested")
cast <- html_nodes(html, "b.selectorgadget_suggested")
View(cast)
cast
cast <- html_nodes(html, "div b")
View(cast)
cast <- html_nodes(html, "td div")
View(cast)
html_name(html)
html_name(url)
html_attrs(html)
html_name(html)
html_attrs(html)
html_attr(html)
html_attr(vhtml, "style")
html_attr(html, "style")
html_attr(html, "duv")
html_attr(html, "div")
cast <- html_nodes(html, "td div")
View(cast)
cast <- html_nodes(html, "td:nth-child(7) b , th , .12bk:nth-child(4) div")
cast <- html_nodes(html, td:nth-child(7) b , th , .12bk:nth-child(4) div)
cast <- html_nodes(html, "td:nth-child(7) b , th , .12bk:nth-child(4) div")
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
html_name(html)
html_attrs(html)
html_attr(html, "div")
cast <- html_nodes(html, "td:nth-child(7) b , th , .12bk:nth-child(4) div")
cast <- html_nodes(html, "//td[(((count(preceding-sibling::*) + 1) = 7) and parent::*)]//b | //th | //*[contains(concat( " ", @class, " " ), concat( " ", "12bk", " " )) and (((count(preceding-sibling::*) + 1) = 4) and parent::*)]//div")
cast <- html_nodes(html, td)
cast <- html_nodes(html, "td")
View(cast)
cast <- html_nodes(html, "td:nth-child")
cast <- html_nodes(html, "td")
cast <- html_nodes(html, "td, div, b")
View(cast)
cast <- html_nodes(html, "div b")
View(cast)
cast <- html_nodes(html, "tr tb")
View(cast)
url <- "https://www.taifex.com.tw/cht/3/totalTableDateExcel"
html <- read_html(url, encoding = "UTF-8")
html_name(html)
html_attrs(html)
html_attr(html, "div")
cast <- html_nodes(html, "tr tb")
cast <- html_nodes(html, "div b")
View(cast)
cast <- html_nodes(html, "td:nth-child(7) b")
View(cast)
cast
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
html_name(html)
html_attrs(html)
html_attr(html, "div")
cast <- html_nodes(html, "td:nth-child(7) b")
cast
#td:nth-child(7) b"
cast <- html_nodes(html, "div b")
cast
#td:nth-child(7) b"
cast <- html_nodes(html, "td:nth-child(7) b")
cast
cast[1]
cast[1,]
cast[1]
library(rJava)
library(xlsxjars)
library(xlsx)
install.packages("xlsx")
install.packages("xlsxjars")
install.packages("rJava")
library(rJava)
library(xlsxjars)
library(xlsx)
library(rJava)
library(xlsxjars)
library(xlsx)
