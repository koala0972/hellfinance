ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
#  geom_line(aes(x = date-1, y = up), color = "plum2", group = 1) +
geom_line(aes(x = date-1, y = move), color = "blue", group = 1)
HU <- as.tibble(HU)
#thexml$move <- ((HU$close-HU$low))*100
#thexml$close <- (HU$close-16500)*50
thexml$don <- ((HU$high-HU$low)-200)*100
thexml$up <- ((HU$close-HU$open)-200)*100
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1) +
geom_line(aes(x = date-1, y = move), color = "blue", group = 1)
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
#thexml$move <- ((HU$close-HU$low))*100
#thexml$close <- (HU$close-16500)*50
thexml$don <- ((HU$high-HU$low)-200)*100
thexml$up <- ((HU$close-HU$open)-200)*100
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
HU$move <- (HU$close-HU$low)*10
View(thexml)
View(HU)
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 2) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 3)
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 2) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = thexml$up, group = thexml$up)
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 2) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = thexml$up)
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
View(thexml)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(Cairo)
library(showtext)
library(readxl)
library(xlsx)
showtext_auto(enable=T)
thexml <- read.xlsx("more.xlsx",sheetName = "Sheet1" )
thexml$NA. <- NULL
thexml$date <- as.Date(thexml$date, format =  "%Y-%m-%d")
#thexml <- thexml[-c(14),]
dday <- nrow(thexml)
thexml$numb <- as.numeric(thexml$numb)
ggplot(thexml, aes(x=date)) + geom_line(aes(y = numb), color = "darkred")
plot(thexml)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = dday)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
#thexml$move <- ((HU$close-HU$low))*100
#thexml$close <- (HU$close-16500)*50
thexml$don <- ((HU$high-HU$low)-200)*100
thexml$up <- ((HU$close-HU$open)-200)*100
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
HU$move <- (HU$close-HU$low)*10
ggplot(HU, aes(x=date)) +
geom_line(aes(y = move), color = "blue")
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
#  geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
thexml$go <- (HU$open-16500)*50
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
View(thexml)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(Cairo)
library(showtext)
library(readxl)
library(xlsx)
showtext_auto(enable=T)
thexml <- read.xlsx("more.xlsx",sheetName = "Sheet1" )
thexml$NA. <- NULL
thexml$date <- as.Date(thexml$date, format =  "%Y-%m-%d")
#thexml <- thexml[-c(14),]
dday <- nrow(thexml)
thexml$numb <- as.numeric(thexml$numb)
ggplot(thexml, aes(x=date)) + geom_line(aes(y = numb), color = "darkred")
plot(thexml)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = dday)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
#thexml$move <- ((HU$close-HU$low))*100
#thexml$close <- (HU$close-16500)*50
thexml$don <- ((HU$high-HU$low)-200)*100
thexml$up <- ((HU$close-HU$open)-200)*100
thexml$go <- (HU$open-16500)*50
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
#  geom_line(aes(x = date-1, y = close), color = "green", group = 1) +
geom_line(aes(x = date-1, y = don), color = "chocolate2", group = 1) +
geom_line(aes(x = date-1, y = go), color = "cyan1", group = 1) +
geom_line(aes(x = date-1, y = up), color = "plum2", group = 1)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(Cairo)
library(showtext)
showtext_auto(enable=T)
tq_transmute_fun_options() %>% str()
tq_transmute_fun_options()$zoo
tq_transmute_fun_options()$xts
tq_transmute_fun_options()$quantmod
tq_transmute_fun_options()$TTR
tq_transmute_fun_options()$PerformanceAnalytics
#data("FANG")
########################FANG化##########################
HU <- getSymbols("2002.tw", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 100)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "中鋼", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
########################################################
CG <- getSymbols("2009.tw", auto.assign = FALSE, from = "2017-01-01")
CG <- CG[(rowSums(is.na(CG)) == 0), ]
CG <- tail(CG, n = 100)
CG <- round(CG, digits = 2)
CG <- as.data.frame(CG)
CG <- cbind(date = rownames(CG), CG)
names = gsub("^........(.*$)", "\\1", names(CG))#點數等於字數
names(CG) <- tolower(names)
rownames(CG) <- 1:nrow(CG)
CG <- cbind(symbol = "第一銅", CG)
CG$date <- as.Date(CG$date, format =  "%Y-%m-%d")
CG <- as.tibble(CG)
UD <- getSymbols("2317.tw", auto.assign = FALSE, from = "2017-01-01")
UD <- UD[(rowSums(is.na(UD)) == 0), ]
UD <- tail(UD, n = 100)
UD <- round(UD, digits = 2)
UD <- as.data.frame(UD)
UD <- cbind(date = rownames(UD), UD)
names = gsub("^........(.*$)", "\\1", names(UD))#點數等於字數
names(UD) <- tolower(names)
rownames(UD) <- 1:nrow(UD)
UD <- cbind(symbol = "鴻海", UD)
UD$date <- as.Date(UD$date, format =  "%Y-%m-%d")
UD <- as.tibble(UD)
CC <- getSymbols("6116.tw", auto.assign = FALSE, from = "2017-01-01")
CC <- CC[(rowSums(is.na(CC)) == 0), ]
CC <- tail(CC, n = 100)
CC <- round(CC, digits = 2)
CC <- as.data.frame(CC)
CC <- cbind(date = rownames(CC), CC)
names = gsub("^........(.*$)", "\\1", names(CC))#點數等於字數
names(CC) <- tolower(names)
rownames(CC) <- 1:nrow(CC)
CC <- cbind(symbol = "彩晶", CC)
CC$date <- as.Date(CC$date, format =  "%Y-%m-%d")
CC <- as.tibble(CC)
GG <- getSymbols("2603.tw", auto.assign = FALSE, from = "2017-01-01")
GG <- GG[(rowSums(is.na(GG)) == 0), ]
GG <- tail(GG, n = 100)
GG <- round(GG, digits = 2)
GG <- as.data.frame(GG)
GG <- cbind(date = rownames(GG), GG)
names = gsub("^........(.*$)", "\\1", names(GG))#點數等於字數
names(GG) <- tolower(names)
rownames(GG) <- 1:nrow(GG)
GG <- cbind(symbol = "長榮", GG)
GG$date <- as.Date(GG$date, format =  "%Y-%m-%d")
GG <- as.tibble(GG)
YY <- getSymbols("2609.tw", auto.assign = FALSE, from = "2017-01-01")
YY <- YY[(rowSums(is.na(YY)) == 0), ]
YY <- tail(YY, n = 100)
YY <- round(YY, digits = 2)
YY <- as.data.frame(YY)
YY <- cbind(date = rownames(YY), YY)
names = gsub("^........(.*$)", "\\1", names(YY))#點數等於字數
names(YY) <- tolower(names)
rownames(YY) <- 1:nrow(YY)
YY <- cbind(symbol = "陽明", YY)
YY$date <- as.Date(YY$date, format =  "%Y-%m-%d")
YY <- as.tibble(YY)
FANG <- rbind(CC, CG, HU, UD, GG, YY)
FANG_annual_returns <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "yearly",
type       = "arithmetic")
FANG_annual_returns#年收益
FANG_annual_returns %>%
ggplot(aes(x = date, y = yearly.returns, fill = symbol)) +
geom_col() +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
scale_y_continuous(labels = scales::percent) +
labs(title = "FANG: Annual Returns",
subtitle = "Get annual returns quickly with tq_transmute!",
y = "Annual Returns", x = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
theme_tq() +
scale_fill_tq()#年收益圖表
FANG_daily_log_returns <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "daily",
type       = "log",
col_rename = "monthly.returns")
FANG_macd <- FANG %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
MAmovement <- function(st, daysss){
library(quantmod)
library(xts)
library(zoo)
library(lubridate)
library(ggplot2)
library(babynames)
library(dplyr)
##^TWII
#rm(list = ls())
dao <- st
allline <- getSymbols(dao, auto.assign = FALSE, from = "2013-01-01")
#必須先去除NA值
YMAline <- allline[(rowSums(is.na(allline)) == 0), ]
YMAline <- data.frame(allline[, 4])
does <- data.frame()
for (c in 244:(nrow(YMAline))) {
so <- sum(YMAline[c:(c-244), 1]) / 245
so <- data.frame(rbind(does, so))
does <- so
}
colnames(so) <- "YMA"
YMAline <- data.frame(YMAline)
rownames(so) <- tail(rownames(YMAline), nrow(so))
so <- round(so, digits = 2)
#  chartSeries(so)
YMAline <- so
HMAline <- allline[(rowSums(is.na(allline)) == 0), ]
HMAline <- data.frame(allline[, 4])
does1 <- data.frame()
for (c in 122:(nrow(HMAline))) {
so1 <- sum(HMAline[c:(c-122), 1]) / 123
so1 <- data.frame(rbind(does1, so1))
does1 <- so1
}
colnames(so1) <- "HMA"
HMAline <- data.frame(HMAline)
rownames(so1) <- tail(rownames(HMAline), nrow(so1))
so1 <- round(so1, digits = 2)
#  chartSeries(so)
HMAline <- so1
SMAline <- allline[(rowSums(is.na(allline)) == 0), ]
SMAline <- data.frame(allline[, 4])
does6 <- data.frame()
for (c in 60:(nrow(SMAline))) {
so6 <- sum(SMAline[c:(c-60), 1]) / 61
so6 <- data.frame(rbind(does6, so6))
does6 <- so6
}
colnames(so6) <- "SMA"
SMAline <- data.frame(SMAline)
rownames(so6) <- tail(rownames(SMAline), nrow(so6))
so6 <- round(so6, digits = 2)
#  chartSeries(so)
SMAline <- so6
MMAline <- allline[(rowSums(is.na(allline)) == 0), ]
MMAline <- data.frame(allline[, 4])
does2 <- data.frame()
for (c in 20:(nrow(MMAline))) {
so2 <- sum(MMAline[c:(c-20), 1]) / 21
so2 <- data.frame(rbind(does2, so2))
does2 <- so2
}
colnames(so2) <- "MMA"
MMAline <- data.frame(MMAline)
rownames(so2) <- tail(rownames(MMAline), nrow(so2))
so2 <- round(so2, digits = 2)
# chartSeries(so)
MMAline <- so2
TMAline <- allline[(rowSums(is.na(allline)) == 0), ]
TMAline <- data.frame(allline[, 4])
does3 <- data.frame()
for (c in 15:(nrow(TMAline))) {
so3 <- sum(TMAline[c:(c-15), 1]) / 16
so3 <- data.frame(rbind(does3, so3))
does3 <- so3
}
colnames(so3) <- "TMA"
TMAline <- data.frame(TMAline)
rownames(so3) <- tail(rownames(TMAline), nrow(so3))
so3 <- round(so3, digits = 2)
#  chartSeries(so)
TMAline <- so3
FMAline <- allline[(rowSums(is.na(allline)) == 0), ]
FMAline <- data.frame(allline[, 4])
does4 <- data.frame()
for (c in 5:(nrow(FMAline))) {
so4 <- sum(FMAline[c:(c-5), 1]) / 6
so4 <- data.frame(rbind(does4, so4))
does4 <- so4
}
colnames(so4) <- "FMA"
FMAline <- data.frame(FMAline)
rownames(so4) <- tail(rownames(FMAline), nrow(so4))
so4 <- round(so4, digits = 2)
#  chartSeries(so)
FMAline <- so4
#chart_Series(Yline(),)
#add_TA(Hline(), on = 1, col = "blue", lty =2)
#plot.xts(merge(VXX[,6],VIX[,6],join = 'inner'),main = 'plot 2 series on same panel')
ALL <- data.frame()
#ALL <- as.data.frame(cbind("Yline" = Yline(a)[,1],"Hline" = Hline(a)[,1],"Mline" = Mline(a)[,1],"Tline" = Tline(a)[,1],"Fline" = Fline(a)[,1]))
#rownames(ALL)<- rownames(FMAline)
#plot(ALL)
ldate <- nrow(YMAline)
YMAline <- tail(YMAline, n=ldate)
HMAline <- tail(HMAline, n=ldate)
SMAline <- tail(SMAline, n=ldate)
MMAline <- tail(MMAline, n=ldate)
TMAline <- tail(TMAline, n=ldate)
FMAline <- tail(FMAline, n=ldate)
ALL <- as.data.frame(cbind(x = (1:nrow(YMAline)), YMA = YMAline$YMA,HMA = HMAline$HMA,SMA = SMAline$SMA, MMA = MMAline$MMA, TMA = TMAline$TMA, FMA = FMAline$FMA))
#YMAline <- cbind(YMAline,x = (1:nrow(YMAline)))
#ggplot(ALL, aes(x = x, y = YMA)) + geom_line()
bu1 <- ALL
ALL <- tail(bu1, n = daysss)
ggplot(ALL, aes(x=x)) +
geom_line(aes(y = YMA), color = "darkred")+
geom_line(aes(y = HMA), color="orange")+
geom_line(aes(y = SMA), color="yellow")+
geom_line(aes(y = MMA), color="green")+
geom_line(aes(y = TMA), color="blue")+
geom_line(aes(y = FMA), color="slateblue")
}
MAmovement("2603.tw" , 180)
MAmovement("2603.tw" , 60)
getMA <- function(stock){
library(quantmod)
library(xts)
library(zoo)
#rm(list = ls())
YMA <- function(YMA){
buffer <- tail(YMA,n = 240)
buffer <- (sum(buffer[,1]))/240
}
HMA <- function(HMA){
buffer <- tail(HMA,n = 120)
buffer <- (sum(buffer[,1]))/120
}
SMA <- function(SMA){
buffer <- tail(SMA,n = 60)
buffer <- (sum(buffer[,1]))/60
}
MMA <- function(MMA){
buffer <- tail(MMA,n = 20)
buffer <- (sum(buffer[,1]))/20
}
TMA <- function(TMA){
buffer <- tail(TMA,n = 15)
buffer <- (sum(buffer[,1]))/15
}
FMA <- function(FMA){
buffer <- tail(FMA,n = 5)
buffer <- (sum(buffer[,1]))/5
FMA <- buffer
}
#getSymbols("^TWII", from="2010-1-1") #大盤
#tw2395 = getSymbols('2395.TW', auto.assign = FALSE) #得到研華資料(來源不明)
stock <- getSymbols(stock, auto.assign = FALSE, from="2019-1-1")
#tw=getSymbols('2395.TW', auto.assign = FALSE, from="2019-1-1")
#plot(tw2395) #資料視覺化
#chart_Series(tw2395) #quantmod模組的序列視覺化強化版
head(stock) #查看數據前六行
closing <- stock[,4] #把矩陣tw2395的第四行取出變成closing
closing <- as.matrix(closing)#轉換數列為矩陣
#rownames(closing) <- 1:nrow(closing)#把矩陣排名稱改成1~盡頭
colnames(closing) <- ("y")#把矩陣列名改成y
#plot(closing) #資料視覺化
#p <- data.frame(x=1:nrow(closing), y=closing)#宣告資料表P
#p <- as.matrix(p)#轉換資料表p為矩陣
report <- data.frame(YMA(closing),HMA(closing),SMA(closing),MMA(closing),TMA(closing),FMA(closing))
colnames(report) <- c('YMA', 'HMA', 'SMA', 'MMA', 'TMA','FMA')
#row.names(report) <- (stock)
return(report)
}
("2603.tw")
###############
getMA("2603.tw")
library(tidyverse)
library(tidyquant)
library(tidyverse)
library(tidyquant)
HU <- getSymbols("2002.tw", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 100)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "中鋼", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
geom_barchart(aes(open = open, high = high, low = low, close = close)) +
labs(title = "AAPL Bar Chart", y = "Closing Price", x = "") +
theme_tq()
HU %>%
ggplot(aes(x = date, y = close)) +
geom_barchart(aes(open = open, high = high, low = low, close = close)) +
labs(title = "AAPL Bar Chart", y = "Closing Price", x = "") +
theme_tq()
HU <- getSymbols("2603.tw", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 100)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
HU %>%
ggplot(aes(x = date, y = close)) +
geom_barchart(aes(open = open, high = high, low = low, close = close)) +
labs(title = "AAPL Bar Chart", y = "Closing Price", x = "") +
theme_tq()
