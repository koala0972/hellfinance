geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
library(tidyverse)
library(tidyquant)
library(lubridate)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 75)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
FANG_macd <- HU %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2021-01-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
library(tidyverse)
library(tidyquant)
library(lubridate)
library(Cairo)
library(showtext)
showtext_auto(enable=T)
tq_transmute_fun_options() %>% str()
tq_transmute_fun_options()$zoo
tq_transmute_fun_options()$xts
tq_transmute_fun_options()$quantmod
tq_transmute_fun_options()$TTR
tq_transmute_fun_options()$PerformanceAnalytics
#data("FANG")
########################FANG化##########################
HU <- getSymbols("2436.tw", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = 100)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^........(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "偉詮電", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
########################################################
CG <- getSymbols("2458.tw", auto.assign = FALSE, from = "2017-01-01")
CG <- CG[(rowSums(is.na(CG)) == 0), ]
CG <- tail(CG, n = 100)
CG <- round(CG, digits = 2)
CG <- as.data.frame(CG)
CG <- cbind(date = rownames(CG), CG)
names = gsub("^........(.*$)", "\\1", names(CG))#點數等於字數
names(CG) <- tolower(names)
rownames(CG) <- 1:nrow(CG)
CG <- cbind(symbol = "義隆", CG)
CG$date <- as.Date(CG$date, format =  "%Y-%m-%d")
CG <- as.tibble(CG)
UD <- getSymbols("2330.tw", auto.assign = FALSE, from = "2017-01-01")
UD <- UD[(rowSums(is.na(UD)) == 0), ]
UD <- tail(UD, n = 100)
UD <- round(UD, digits = 2)
UD <- as.data.frame(UD)
UD <- cbind(date = rownames(UD), UD)
names = gsub("^........(.*$)", "\\1", names(UD))#點數等於字數
names(UD) <- tolower(names)
rownames(UD) <- 1:nrow(UD)
UD <- cbind(symbol = "GG", UD)
UD$date <- as.Date(UD$date, format =  "%Y-%m-%d")
UD <- as.tibble(UD)
CC <- getSymbols("8039.tw", auto.assign = FALSE, from = "2017-01-01")
CC <- CC[(rowSums(is.na(CC)) == 0), ]
CC <- tail(CC, n = 100)
CC <- round(CC, digits = 2)
CC <- as.data.frame(CC)
CC <- cbind(date = rownames(CC), CC)
names = gsub("^........(.*$)", "\\1", names(CC))#點數等於字數
names(CC) <- tolower(names)
rownames(CC) <- 1:nrow(CC)
CC <- cbind(symbol = "台虹", CC)
CC$date <- as.Date(CC$date, format =  "%Y-%m-%d")
CC <- as.tibble(CC)
GG <- getSymbols("2603.tw", auto.assign = FALSE, from = "2017-01-01")
GG <- GG[(rowSums(is.na(GG)) == 0), ]
GG <- tail(GG, n = 100)
GG <- round(GG, digits = 2)
GG <- as.data.frame(GG)
GG <- cbind(date = rownames(GG), GG)
names = gsub("^........(.*$)", "\\1", names(GG))#點數等於字數
names(GG) <- tolower(names)
rownames(GG) <- 1:nrow(GG)
GG <- cbind(symbol = "長榮", GG)
GG$date <- as.Date(GG$date, format =  "%Y-%m-%d")
GG <- as.tibble(GG)
YY <- getSymbols("2609.tw", auto.assign = FALSE, from = "2017-01-01")
YY <- YY[(rowSums(is.na(YY)) == 0), ]
YY <- tail(YY, n = 100)
YY <- round(YY, digits = 2)
YY <- as.data.frame(YY)
YY <- cbind(date = rownames(YY), YY)
names = gsub("^........(.*$)", "\\1", names(YY))#點數等於字數
names(YY) <- tolower(names)
rownames(YY) <- 1:nrow(YY)
YY <- cbind(symbol = "陽明", YY)
YY$date <- as.Date(YY$date, format =  "%Y-%m-%d")
YY <- as.tibble(YY)
FANG <- rbind(CC, CG, HU, UD, GG, YY)
FANG_annual_returns <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "yearly",
type       = "arithmetic")
FANG_annual_returns#年收益
FANG_annual_returns %>%
ggplot(aes(x = date, y = yearly.returns, fill = symbol)) +
geom_col() +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
scale_y_continuous(labels = scales::percent) +
labs(title = "FANG: Annual Returns",
subtitle = "Get annual returns quickly with tq_transmute!",
y = "Annual Returns", x = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
theme_tq() +
scale_fill_tq()#年收益圖表
FANG_daily_log_returns <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "daily",
type       = "log",
col_rename = "monthly.returns")
FANG_daily_log_returns %>%
ggplot(aes(x = monthly.returns, fill = symbol)) +
geom_density(alpha = 0.5) +
labs(title = "FANG: Charting the Daily Log Returns",
x = "Monthly Returns", y = "Density") +
theme_tq() +
scale_fill_tq() +
facet_wrap(~ symbol, ncol = 2)
FANG %>%
group_by(symbol) %>%
tq_transmute(select     = open:volume,
mutate_fun = to.period,
period     = "months")
FANG_daily <- FANG %>%
group_by(symbol)
FANG_daily %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size = 1) +
labs(title = "Daily Stock Prices",
x = "", y = "Adjusted Prices", color = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = scales::dollar) +
theme_tq() +
scale_color_tq()
FANG_monthly <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = to.period,
period     = "months")
FANG_monthly %>%
ggplot(aes(x = date, y = adjusted, color = symbol)) +
geom_line(size = 1) +
labs(title = "Monthly Stock Prices",
x = "", y = "Adjusted Prices", color = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
scale_y_continuous(labels = scales::dollar) +
theme_tq() +
scale_color_tq()
# Asset Returns
FANG_returns_monthly <- FANG %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly")
# Baseline Returns
baseline_returns_monthly <- "XLK" %>%
tq_get(get  = "stock.prices",
from = "2013-01-01",
to   = "2016-12-31") %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "monthly")
FANG_macd <- FANG %>%
group_by(symbol) %>%
tq_mutate(select     = close,
mutate_fun = MACD,
nFast      = 12,
nSlow      = 26,
nSig       = 9,
maType     = SMA) %>%
mutate(diff = macd - signal) %>%
select(-(open:volume))
FANG_macd
FANG_macd %>%
filter(date >= as_date("2016-10-01")) %>%
ggplot(aes(x = date)) +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
geom_line(aes(y = macd, col = symbol)) +
geom_line(aes(y = signal), color = "blue", linetype = 2) +
geom_bar(aes(y = diff), stat = "identity", color = palette_light()[[1]]) +
facet_wrap(~ symbol, ncol = 2, scale = "free_y") +
labs(title = "Moving Average Convergence Divergence",
y = "MACD", x = "", color = "") +
theme_tq() +
scale_color_tq()
COMpanel <- function(days){
library(quantmod)
getSymbols("2409.tw")
#getSymbols("2436.tw") 成長過高
#getSymbols("2458.tw") 成長過高
#getSymbols("3049.tw") 低成長
getSymbols("3481.tw")
getSymbols("3607.tw")
#getSymbols("3622.tw") 大量級
#getSymbols("5471.tw") 成長過高
getSymbols("6116.tw")
getSymbols("6243.tw")
sb = data.frame(`2409.TW`)
#sc = data.frame(`2436.TW`)
#sd = data.frame(`2458.TW`)
#sh = data.frame(`3049.TW`)
sl = data.frame(`3481.TW`)
#sr = data.frame(`3622.TW`)
#sv = data.frame(`5471.TW`)
sy = data.frame(`6116.TW`)
names = gsub("^........(.*$)", "\\1", names(`2409.TW`))
names(sb) = names
#names(sc) = names
#names(sd) = names
#names(sh) = names
names(sl) = names
#names(sr) = names
#names(sv) = names
names(sy) = names
# rbind into one dataframe
sb$label = "友達"
#sc$label = "sc"
#sd$label = "sd"
#sh$label = "和鑫"
sl$label = "群創"
#sr$label = "洋華"
#sv$label = "sv"
sy$label = "彩晶"
df = rbind(tail(sb, n = days), tail(sl, n = days), tail(sy, n = days))
#df = tail(df, n = days)
# Packages
library(ggplot2)
library(directlabels)
# The plot - labels at the beginning and the ends of the lines.
#ggplot(df, aes(as.Date(rownames(df)), Adjusted, group = label, colour = label)) +
#  geom_line()  +
#  scale_colour_discrete(guide = 'none')  +
#  geom_dl(aes(label = label), method = list(dl.combine("first.points", "last.points")))
ggplot(df, aes(as.Date(rownames(df)), Adjusted, group = label, colour = label)) +
geom_line()  +
scale_colour_discrete(guide = 'none')  +
geom_dl(aes(label = label), method = list(dl.combine("first.points", "last.points")))
}
compairlist <- function(stna, days){
library(quantmod)
library(xts)
library(zoo)
library(lubridate)
library(ggplot2)
library(babynames)
library(dplyr)
#^TWII
panel = c("2349.tw", "2409.tw", "2436.tw", "2458.tw", "2474.tw", "3014.tw", "3038.tw", "3049.tw", "3227.tw", "3390.tw", "3416.tw", "3481.tw", "3523.tw", "3545.tw", "3556.tw", "3607.tw", "3615.tw", "3622.tw", "3623.tw", "3673.tw", "4729.tw", "5471.tw", "5487.tw", "6153.tw", "6116.tw", "6243.tw", "6251.tw", "6269.tw", "8049.tw", "8105.tw")
icdesign = c("3014.tw", "3545.tw" )
food = c("1201.tw", "1203.tw", "1210.tw", "1213.tw", "1215.tw", "1216.tw", "1217.tw", "1218.tw", "1219.tw", "1220.tw", "1225.tw", "1227.tw", "1229.tw", "1231.tw", "1232.tw", "1233.tw", "1234.tw", "1235.tw", "1236.tw", "1256.tw")
cement = c("1101.tw", "1102.tw", "1103.tw", "1104.tw", "1108.tw", "1109.tw", "1110.tw")
plastic = c("1301.tw", "1303.tw", "1301.tw", "1303.tw", "1304.tw", "1305.tw", "1307.tw", "1308.tw", "1309.tw", "1310.tw", "1312.tw", "1313.tw", "1314.tw", "1315.tw", "1321.tw", "1323.tw", "1324.tw", "1325.tw", "1326.tw", "1337.tw", "1340.tw", "1341.tw", "4306.tw")
textile = c("1402.tw", "1409.tw", "1410.tw", "1413.tw", "1414.tw", "1417.tw", "1418.tw", "1419.tw", "1423.tw", "1434.tw", "1439.tw", "1440.tw", "1441.tw", "1443.tw", "1444.tw", "1445.tw", "1446.tw", "1447.tw", "1449.tw", "1451.tw", "1452.tw", "1453.tw", "1454.tw", "1455.tw", "1456.tw", "1457.tw", "1459.tw", "1460.tw", "1463.tw", "1464.tw", "1465.tw", "1466.tw", "1467.tw", "1468.tw", "1470.tw", "1472.tw", "1473.tw", "1474.tw", "1475.tw", "1476.tw", "1477.tw", "4414.tw", "4426.tw", "4438.tw", "4439.tw")
machinery = c("1503.tw", "1504.tw", "1506.tw", "1507.tw", "1513.tw", "1514.tw", "1515.tw", "1517.tw", "1519.tw", "1526.tw", "1527.tw", "1528.tw", "1529.tw", "1530.tw", "1531.tw", "1532.tw", "1535.tw", "1537.tw", "1538.tw", "1539.tw", "1540.tw", "1541.tw", "1558.tw", "1560.tw", "1583.tw", "1589.tw", "1590.tw", "1597.tw", "2049.tw", "2241.tw", "2371.tw", "3167.tw", "4526.tw", "4532.tw", "4540.tw", "4552.tw", "4555.tw", "4560.tw", "4562.tw", "4564.tw", "4566.tw", "4571.tw", "4572.tw", "4576.tw", "5288.tw", "8222.tw", "8374.tw", "8996.tw")
electrical = c("1603.tw", "1604.tw", "1605.tw", "1608.tw", "1609.tw", "1611.tw", "1612.tw", "1614.tw", "1615.tw", "1616.tw", "1617.tw", "1618.tw", "1626.tw", "4930.tw", "5283.tw")
biotech = c("1598.tw", "1701.tw", "1707.tw", "1720.tw", "1731.tw", "1733.tw", "1734.tw", "1736.tw", "1760.tw", "1762.tw", "1783.tw", "1786.tw", "1789.tw", "1795.tw", "3164.tw", "3705.tw", "4104.tw", "4106.tw", "4108.tw", "4119.tw", "4133.tw", "4137.tw", "4141.tw", "4142.tw", "4148.tw", "4155.tw", "4164.tw", "4190.tw", "4737.tw", "4746.tw", "6491.tw", "6541.tw", "6598.tw", "6666.tw")
chemical = c("1708.tw", "1709.tw", "1710.tw", "1711.tw", "1712.tw", "1713.tw", "1714.tw", "1717.tw", "1718.tw", "1721.tw", "1722.tw", "1723.tw", "1724.tw", "1725.tw", "1726.tw", "1727.tw", "1730.tw", "1732.tw", "1735.tw", "1773.tw", "1776.tw", "3708.tw", "4720.tw", "4722.tw", "4739.tw", "4755.tw", "4763.tw", "4764.tw", "4766.tw")
glass = c("1802.tw", "1806.tw", "1809.tw", "1810.tw", "1817.tw")
paper = c("1903.tw", "1904.tw", "1905.tw", "1906.tw", "1907.tw", "1909.tw")
metal = c("2002.tw", "2006.tw", "2007.tw", "2008.tw", "2009.tw", "2010.tw", "2012.tw", "2013.tw", "2014.tw", "2015.tw", "2017.tw", "2020.tw", "2022.tw", "2023.tw", "2024.tw", "2025.tw", "2027.tw", "2028.tw", "2029.tw", "2030.tw", "2031.tw", "2032.tw", "2033.tw", "2034.tw", "2038.tw", "2069.tw", "2211.tw", "3004.tw", "5007.tw", "5538.tw", "9958.tw")
rubber = c("2101.tw", "2102.tw", "2103.tw", "2104.tw", "2105.tw", "2106.tw", "2107.tw", "2108.tw", "2109.tw", "2114.tw", "6582.tw")
car = c("1319.tw", "1338.tw", "1339.tw", "1512.tw", "1521.tw", "1522.tw", "1524.tw", "1525.tw", "1533.tw", "1536.tw", "1568.tw", "1587.tw", "1592.tw", "2115.tw", "2201.tw", "2204.tw", "2206.tw", "2207.tw", "2227.tw", "2228.tw", "2231.tw", "2233.tw", "2236.tw", "2239.tw", "2243.tw", "2247.tw", "2497.tw", "3346.tw", "4551.tw", "4557.tw", "4581.tw", "6288.tw", "6605.tw")
computer = c("2301.tw", "2305.tw", "2324.tw", "2331.tw", "2352.tw", "2353.tw", "2356.tw", "2357.tw", "2362.tw", "2364.tw", "2365.tw", "2376.tw", "2377.tw", "2380.tw", "2382.tw", "2387.tw", "2395.tw", "2397.tw", "2399.tw", "2405.tw", "2417.tw", "2424.tw", "2425.tw", "2442.tw", "2465.tw", "3002.tw", "3005.tw", "3013.tw", "3017.tw", "3022.tw", "3046.tw", "3057.tw", "3060.tw", "3231.tw", "3416.tw", "3494.tw", "3515.tw", "3701.tw", "3706.tw", "3712.tw", "4916.tw", "4938.tw", "5215.tw", "5258.tw", "6117.tw", "6128.tw", "6166.tw", "6172.tw", "6206.tw", "6230.tw", "6235.tw", "6277.tw", "6414.tw", "6579.tw", "6591.tw", "6669.tw", "8114.tw", "8163.tw", "8210.tw", "9912.tw")
semiconductor = c("2302.tw", "2303.tw", "2329.tw", "2330.tw", "2337.tw", "2338.tw", "2342.tw", "2344.tw", "2351.tw", "2363.tw", "2369.tw", "2379.tw", "2388.tw", "2401.tw", "2408.tw", "2434.tw", "2436.tw", "2441.tw", "2449.tw", "2451.tw", "2454.tw", "2458.tw", "2481.tw", "3006.tw","3034.tw", "3035.tw", "3041.tw", "3054.tw", "3094.tw", "3189.tw", "3257.tw", "3413.tw", "3443.tw", "3530.tw", "3532.tw", "3536.tw", "3545.tw", "3583.tw", "3588.tw", "3661.tw", "3686.tw", "3711.tw", "4919.tw", "4952.tw", "4961.tw", "4967.tw", "4968.tw", "5269.tw", "5285.tw", "5471.tw", "6202.tw", "6239.tw", "6243.tw", "6257.tw", "6271.tw", "6415.tw", "6451.tw", "6515.tw", "6525.tw", "6531.tw", "6533.tw", "6552.tw", "6573.tw", "6756.tw", "8016.tw", "8028.tw", "8081.tw", "8110.tw", "8131.tw", "8150.tw", "8261.tw", "8271.tw")
ecomponents = c()
electronics = c()
cnetwork = c("2314.tw", "2321.tw", "2332.tw", "2345.tw", "2412.tw", "2419.tw", "2439.tw", "2444.tw", "2450.tw", "2455.tw", "2485.tw", "2498.tw", "3025.tw", "3027.tw", "3045.tw", "3047.tw", "3062.tw", "3138.tw", "3311.tw", "3380.tw", "3419.tw", "3596.tw", "3682.tw", "3694.tw", "3704.tw", "4904.tw", "4906.tw", "4977.tw", "5388.tw", "6136.tw", "6142.tw", "6152.tw", "6216.tw", "6285.tw", "6416.tw", "6426.tw", "6442.tw", "6674.tw", "8011.tw", "8101.tw")
infservice = c("2427.tw", "2453.tw", "2468.tw", "2471.tw", "2480.tw", "3029.tw", "3130.tw", "4994.tw", "5203.tw", "6112.tw", "6183.tw", "6214.tw")
construction = c("1316.tw", "1436.tw", "1438.tw", "1442.tw", "1805.tw", "1808.tw", "2501.tw", "2504.tw", "2505.tw", "2506.tw", "2509.tw", "2511.tw", "2515.tw", "2516.tw", "2520.tw", "2524.tw", "2527.tw", "2528.tw", "2530.tw", "2534.tw", "2535.tw", "2536.tw", "2537.tw", "2538.tw", "2539.tw", "2540.tw", "2542.tw", "2543.tw", "2545.tw", "2546.tw", "2547.tw", "2548.tw", "2597.tw", "2841.tw", "2923.tw", "3052.tw", "3056.tw", "3266.tw", "3703.tw", "5515.tw", "5519.tw", "5521.tw", "5522.tw", "5525.tw", "5531.tw", "5533.tw", "5534.tw", "5546.tw", "6177.tw", "9906.tw", "9946.tw")
shipping = c("2208.tw", "2603.tw", "2605.tw", "2606.tw", "2607.tw", "2608.tw", "2609.tw", "2610.tw", "2611.tw", "2612.tw", "2613.tw", "2615.tw", "2617.tw", "2618.tw", "2630.tw", "2633.tw", "2634.tw", "2636.tw", "2637.tw", "2642.tw", "5607.tw", "5608.tw", "8367.tw")
tourism = c("2701.tw", "2702.tw", "2704.tw", "2705.tw", "2706.tw", "2707.tw", "2712.tw", "2722.tw", "2723.tw", "2727.tw", "2731.tw", "2739.tw", "2748.tw", "5706.tw", "8462.tw", "8940.tw", "9943.tw")
banking = c("2801.tw", "2809.tw", "2812.tw", "2816.tw", "2820.tw", "2823.tw", "2832.tw", "2834.tw", "2836.tw", "2838.tw", "2845.tw", "2849.tw", "2850.tw", "2851.tw", "2852.tw", "2855.tw", "2867.tw", "2880.tw", "2881.tw", "2882.tw", "2883.tw", "2884.tw", "2885.tw", "2886.tw", "2887.tw", "2888.tw", "2889.tw", "2890.tw", "2891.tw", "2892.tw", "2897.tw", "5876.tw", "5880.tw", "6005.tw", "6024.tw")
insurance = c()
financial = c()
trade = c("2601.tw", "2614.tw", "2901.tw", "2903.tw", "2905.tw", "2906.tw", "2908.tw", "2910.tw", "2911.tw", "2912.tw", "2913.tw", "2915.tw", "2929.tw", "2936.tw", "2939.tw", "4807.tw", "5906.tw", "5907.tw", "8429.tw", "8443.tw", "8454.tw")
echannel = c("1471.tw", "1582.tw", "2059.tw", "2308.tw", "2313.tw", "2316.tw", "2327.tw", "2328.tw", "2355.tw", "2367.tw", "2368.tw", "2375.tw", "2383.tw", "2385.tw", "2392.tw", "2402.tw", "2413.tw", "2415.tw", "2420.tw", "2421.tw", "2428.tw", "2429.tw", "2431.tw", "2440.tw", "2456.tw", "2457.tw", "2460.tw", "2462.tw", "2467.tw", "2472.tw", "2476.tw", "2478.tw", "2483.tw", "2484.tw", "2492.tw", "2493.tw", "3003.tw", "3011.tw", "3015.tw", "3021.tw", "3023.tw", "3026.tw", "3032.tw", "3037.tw", "3042.tw", "3044.tw", "3058.tw", "3090.tw", "3092.tw", "3229.tw", "3296.tw", "3308.tw", "3321.tw", "3338.tw", "3376.tw", "3432.tw", "3501.tw", "3533.tw", "3550.tw", "3593.tw", "3605.tw", "3607.tw", "3645.tw", "3653.tw", "3679.tw", "4545.tw", "4912.tw", "4915.tw", "4927.tw", "4943.tw", "4958.tw", "4989.tw", "4999.tw", "5469.tw", "6108.tw", "6115.tw", "6133.tw", "6141.tw", "6153.tw", "6155.tw", "6165.tw", "6191.tw", "6197.tw", "6205.tw", "6213.tw", "6224.tw", "6251.tw", "6269.tw", "6282.tw", "6412.tw", "6449.tw", "6672.tw", "6715.tw", "6781.tw", "8039.tw", "8046.tw", "8103.tw", "8213.tw", "8249.tw")
securities = c()
other = c()
O.E.G = c("2616.tw", "6505.tw", "8926.tw", "9908.tw", "9918.tw", "9926.tw", "9931.tw", "9937.tw")
ecommerce = c()
cultural = c()
agricultural = c()
if(stna %in% panel){GG <- COMpanel(days)}#面板光電
if(stna %in% food){COMfood()}#食品
if(stna %in% cement){COMcement()}#水泥
if(stna %in% plastic){COMplastic()}#塑膠
if(stna %in% textile){COMtextile()}#紡織
if(stna %in% machinery){COMmachinery()}#機械
if(stna %in% electrical){COMelectrical()}#電器
if(stna %in% biotech){COMbiotech()}#生技
if(stna %in% chemical){COMchemical()}#化工
if(stna %in% glass){COMglass()}#玻璃
if(stna %in% paper){COMpaper()}#紙
if(stna %in% metal){COMmetal()}#鋼鐵
if(stna %in% rubber){COMrubber()}#橡膠
if(stna %in% car){COMcar()}#汽車
if(stna %in% computer){COMcomputer()}#電腦
if(stna %in% semiconductor){COMsemiconductor()}#半導體
if(stna %in% ecomponents){COMecomponents()}#電子零組件
if(stna %in% electronics){COMelectronics()}#其他電子
if(stna %in% cnetwork){COMcnetwork()}#網通
if(stna %in% infservice){COMinfservice()}#資訊服務
if(stna %in% construction){COMconstruction()}#建築
if(stna %in% shipping){COMshipping()}#航運
if(stna %in% tourism){COMtourism()}#觀光
if(stna %in% banking){COMbanking()}#銀行
if(stna %in% insurance){COMinsurance()}#保險
if(stna %in% financial){COMfinancial()}#金融
if(stna %in% trade){COMtrade()}#貿易百貨
if(stna %in% echannel){COMechannel()}#電子通路
if(stna %in% securities){COMsecurities()}#證券
if(stna %in% other){COMother()}#其他產業
if(stna %in% O.E.G){COMO.E.G()}#油電燃氣
if(stna %in% ecommerce){COMecommerce()}#電子商務
if(stna %in% cultural){COMcultural()}#文創
if(stna %in% agricultural){COMagricultural()}#農業
print(GG)
}
compairlist("2409.tw", 180)
compairlist("2409.tw", 60)
icdesign = c("2363","2379","2388","2401","2436","2454","2458","3006", "3014.tw","3034","3035","3041","3094","3141","3169","3219.tw","3227.tw","3228.tw","3268.tw","3288.tw","3317.tw","3443.tw","3527.tw","3530.tw", "3545.tw","3588.tw","5302.tw","5314.tw","5351.tw","5468.tw","5471.tw")
icdesign
icdesign = c("2363.tw","2379.tw","2388.tw","2401.tw","2436.tw","2454.tw","2458.tw","3006.tw", "3014.tw","3034.tw","3035.tw","3041.tw","3094.tw","3141.tw","3169.tw","3219.tw","3227.tw","3228.tw","3268.tw","3288.tw","3317.tw","3443.tw","3527.tw","3530.tw", "3545.tw","3588.tw","5302.tw","5314.tw","5351.tw","5468.tw","5471.tw")
icdesign
getSymbols(icdesign)
icdesign = c("2363.tw","2379.tw","2388.tw","2401.tw","2436.tw","2454.tw","2458.tw","3006.tw", "3014.tw","3034.tw","3035.tw","3041.tw","3094.tw","3169.tw","3219.tw","3227.tw","3228.tw","3268.tw","3288.tw","3317.tw","3443.tw","3527.tw","3530.tw", "3545.tw","3588.tw","5302.tw","5314.tw","5351.tw","5468.tw","5471.tw")
getSymbols(icdesign)
getOption('timeout')
options(timeout=100)
library(rvest) # 爬蟲相關套件
library(httr) # 爬蟲相關套件
library(dplyr) # 非常強大的資料處理套件
library(lubridate) # 處理日期變數的套件
library(stringr) # 處理字串的套件
library(xlsx)
getOption('timeout')
options(timeout=100)
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
html_name(html)
html_attrs(html)
html_attr(html, "div")
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[^0-9+]", "\\1", cast[1])
cast <- data.frame(date = today(), numb = cast)
#write.xlsx(cast, file = "more.xlsx", sheetName = "Sheet1", col.names = TRUE, row.names = TRUE, append = FALSE)
df <- read.xlsx("more.xlsx",sheetName = "Sheet1" )
df$NA. <- NULL
write.xlsx(rbind(df, cast), file = "more.xlsx", sheetName = "Sheet1", col.names = TRUE, row.names = TRUE, append = FALSE)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(Cairo)
library(showtext)
library(readxl)
library(xlsx)
showtext_auto(enable=T)
thexml <- read.xlsx("more.xlsx",sheetName = "Sheet1" )
thexml$NA. <- NULL
thexml$date <- as.Date(thexml$date, format =  "%Y-%m-%d")
#thexml <- thexml[-c(14),]
dday <- nrow(thexml)
thexml$numb <- as.numeric(thexml$numb)
ggplot(thexml, aes(x=date)) + geom_line(aes(y = numb), color = "darkred")
plot(thexml)
HU <- getSymbols("^TWII", auto.assign = FALSE, from = "2017-01-01")
HU <- HU[(rowSums(is.na(HU)) == 0), ]
HU <- tail(HU, n = dday)
HU <- round(HU, digits = 2)
HU <- as.data.frame(HU)
HU <- cbind(date = rownames(HU), HU)
names = gsub("^.....(.*$)", "\\1", names(HU))#點數等於字數
names(HU) <- tolower(names)
rownames(HU) <- 1:nrow(HU)
HU <- cbind(symbol = "GG", HU)
HU$date <- as.Date(HU$date, format =  "%Y-%m-%d")
HU <- as.tibble(HU)
thexml$move <- ((HU$close-HU$low))*100
#thexml$close <- (HU$close-16500)*50
thexml$don <- ((HU$high-HU$low)-200)*100
thexml$up <- ((HU$close-HU$open)-200)*100
thexml$go <- (HU$open-16500)*50
GG <- getSymbols("2603.tw", auto.assign = FALSE, from = "2017-01-01")
GG <- GG[(rowSums(is.na(GG)) == 0), ]
GG <- tail(GG, n = dday)
GG <- round(GG, digits = 2)
GG <- as.data.frame(GG)
GG <- cbind(date = rownames(GG), GG)
names = gsub("^........(.*$)", "\\1", names(GG))#點數等於字數
names(GG) <- tolower(names)
rownames(GG) <- 1:nrow(GG)
GG <- cbind(symbol = "GG", GG)
GG$date <- as.Date(GG$date, format =  "%Y-%m-%d")
GG <- as.tibble(GG)
thexml$GG <- ((GG$close)-80)*3000
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
# geom_line(aes(x = date, y = GG), color = "green", group = 1) +
# geom_line(aes(x = date, y = don), color = "chocolate2", group = 1) +
# geom_line(aes(x = date, y = go), color = "cyan1", group = 1) +
#  geom_line(aes(x = date, y = up), color = "plum2", group = 1)
geom_line(aes(x = date-1, y = move), color = "blue", group = 1)
HU$move <- (HU$close-HU$low)*10
ggplot(HU, aes(x=date)) +
geom_line(aes(y = move), color = "blue")
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
# geom_line(aes(x = date, y = GG), color = "green", group = 1) +
# geom_line(aes(x = date, y = don), color = "chocolate2", group = 1) +
# geom_line(aes(x = date, y = go), color = "cyan1", group = 1) +
#  geom_line(aes(x = date, y = up), color = "plum2", group = 1)
geom_line(aes(x = date-1, y = move), color = "blue", group = 1) +
ggtitle("外資多空金額&收盤-最低 \n 關係曲線")
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
# geom_line(aes(x = date, y = GG), color = "green", group = 1) +
# geom_line(aes(x = date, y = don), color = "chocolate2", group = 1) +
# geom_line(aes(x = date, y = go), color = "cyan1", group = 1) +
#  geom_line(aes(x = date, y = up), color = "plum2", group = 1)
geom_line(aes(x = date, y = move), color = "blue", group = 1) +
ggtitle("外資多空金額&收盤-最低 \n 關係曲線")
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
# geom_line(aes(x = date, y = GG), color = "green", group = 1) +
# geom_line(aes(x = date, y = don), color = "chocolate2", group = 1) +
# geom_line(aes(x = date, y = go), color = "cyan1", group = 1) +
#  geom_line(aes(x = date, y = up), color = "plum2", group = 1)
geom_line(aes(x = date-1, y = move), color = "blue", group = 1) +
ggtitle("外資多空金額&收盤-最低 \n 關係曲線")
ggplot(thexml, aes(x=date)) +
geom_line(aes(y = numb), color = "darkred", group = 1) +
# geom_line(aes(x = date, y = GG), color = "green", group = 1) +
# geom_line(aes(x = date, y = don), color = "chocolate2", group = 1) +
# geom_line(aes(x = date, y = go), color = "cyan1", group = 1) +
#  geom_line(aes(x = date, y = up), color = "plum2", group = 1)
geom_line(aes(x = date-1, y = move), color = "blue", group = 1) +
ggtitle("foreign investment LS & close-low \n relationship lines")
library(rvest) # 爬蟲相關套件
library(httr) # 爬蟲相關套件
library(dplyr) # 非常強大的資料處理套件
library(lubridate) # 處理日期變數的套件
library(stringr) # 處理字串的套件
library(xlsx)
getOption('timeout')
options(timeout=100)
url <- "https://www.taifex.com.tw/cht/3/totalTableDate"
html <- read_html(url, encoding = "UTF-8")
html_name(html)
html_attrs(html)
html_attr(html, "div")
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[^0-9+]", "\\1", cast[1])
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[^0-9]", "\\1", cast[1])
cast <- gsub("[^0-9].", "\\1", cast[1])
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[^0-9].", "\\1", cast[1])
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[^0-9+]", "\\1", cast[1])
cast <- gsub("[0-9+]", "\\1", cast[1])
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[0-9+]", "\\1", cast[1])
cast <- gsub("[^-0-9+]", "\\1", cast[1])
cast <- html_nodes(html, "td:nth-child(7) b")
cast <- gsub("[^-0-9+]", "\\1", cast[1])
